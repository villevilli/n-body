name: Build Wasm And Deploy Pages

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Dependancies
      run: |
        sudo apt-get update
        sudo apt-get install libasound2-dev
        sudo apt-get install libudev-dev

    - name: Setup rust nightly toolchain
      run: rustup default nightly

    - name: Cache rust build artifacts
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-wasm-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-wasm${{ hashFiles('**/Cargo.lock') }}
          ${{ runner.os }}-cargo-wasm    

    - name: Build wasm
      id: build
      run: |
        rustup target install wasm32-unknown-unknown
        cargo install wasm-bindgen-cli
        cargo build --target wasm32-unknown-unknown --profile wasm-release --verbose
        wasm-bindgen --out-name sim_test --out-dir web/ --target web target/wasm32-unknown-unknown/wasm-release/sim_test.wasm
    
    - name: Upload wasm as artifact
      id: deployment
      uses: actions/upload-pages-artifact@v3
      with: 
        path: web/
  
  #Pages Deployment
  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
   
    if: success() && github.ref == 'refs/heads/main'
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5
        
    
